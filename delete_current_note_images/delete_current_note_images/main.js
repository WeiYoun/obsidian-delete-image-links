var d=Object.create,a=Object.defineProperty,p=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty,m=Object.getOwnPropertyNames,u=Object.getOwnPropertyDescriptor;var r=t=>a(t,"__esModule",{value:!0});var S=(t,e)=>{for(var s in e)a(t,s,{get:e[s],enumerable:!0})},y=(t,e,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of m(e))!h.call(t,n)&&n!=="default"&&a(t,n,{get:()=>e[n],enumerable:!(s=u(e,n))||s.enumerable});return t},v=t=>y(r(a(t!=null?d(p(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);r(exports);S(exports,{default:()=>w});var i=v(require("obsidian")),f={mySetting:"default"},o=class extends i.Plugin{async onload(){console.log("loading plugin"),await this.loadSettings(),this.addRibbonIcon("circle","delete images",()=>{this.deleteImageLinks()}),this.addStatusBarItem().setText("Status Bar Text"),this.addCommand({id:"open-sample-modal",name:"Open Sample Modal",checkCallback:e=>this.app.workspace.activeLeaf?(e||new c(this.app).open(),!0):!1}),this.addSettingTab(new g(this.app,this)),this.registerCodeMirror(e=>{console.log("codemirror",e)}),this.registerDomEvent(document,"click",e=>{console.log("click",e)}),this.registerInterval(window.setInterval(()=>console.log("setInterval"),5*60*1e3))}onunload(){console.log("unloading plugin")}async loadSettings(){this.settings=Object.assign({},f,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async deleteImageLinks(){let e=this.app.workspace.getActiveFile(),s=this.app.vault.read(e);try{let l=(await s).replace(/!\[[^\]]*\]\([^)]*\)/g,"");console.log(l),this.app.vault.modify(e,l)}catch(n){console.error(n)}new i.Notice("All image links have been deleted from your notes.")}},w=o,c=class extends i.Modal{constructor(e){super(e)}onOpen(){let{contentEl:e}=this;e.setText("Woah!")}onClose(){let{contentEl:e}=this;e.empty()}},g=class extends i.PluginSettingTab{constructor(e,s){super(e,s);this.plugin=s}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Settings for my awesome plugin."}),new i.Setting(e).setName("Setting #1").setDesc("It's a secret").addText(s=>s.setPlaceholder("Enter your secret").setValue("").onChange(async n=>{console.log("Secret: "+n),this.plugin.settings.mySetting=n,await this.plugin.saveSettings()}))}};
